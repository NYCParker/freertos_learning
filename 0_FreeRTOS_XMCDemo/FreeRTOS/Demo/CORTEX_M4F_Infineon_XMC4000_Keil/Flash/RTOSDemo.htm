<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\RTOSDemo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\RTOSDemo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Apr 20 21:51:27 2021
<BR><P>
<H3>Maximum Stack Usage =        240 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6f]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">NMI_Handler</a><BR>
 <LI><a href="#[70]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">HardFault_Handler</a><BR>
 <LI><a href="#[71]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">MemManage_Handler</a><BR>
 <LI><a href="#[72]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">BusFault_Handler</a><BR>
 <LI><a href="#[73]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">UsageFault_Handler</a><BR>
 <LI><a href="#[75]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[75]">DebugMon_Handler</a><BR>
 <LI><a href="#[76]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">PendSV_Handler</a><BR>
 <LI><a href="#[78]">SCU_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[78]">SCU_0_IRQHandler</a><BR>
 <LI><a href="#[79]">ERU0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[79]">ERU0_0_IRQHandler</a><BR>
 <LI><a href="#[7a]">ERU0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7a]">ERU0_1_IRQHandler</a><BR>
 <LI><a href="#[7b]">ERU0_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7b]">ERU0_2_IRQHandler</a><BR>
 <LI><a href="#[7c]">ERU0_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7c]">ERU0_3_IRQHandler</a><BR>
 <LI><a href="#[7d]">ERU1_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d]">ERU1_0_IRQHandler</a><BR>
 <LI><a href="#[7e]">ERU1_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7e]">ERU1_1_IRQHandler</a><BR>
 <LI><a href="#[7f]">ERU1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f]">ERU1_2_IRQHandler</a><BR>
 <LI><a href="#[80]">ERU1_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[80]">ERU1_3_IRQHandler</a><BR>
 <LI><a href="#[81]">PMU0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[81]">PMU0_0_IRQHandler</a><BR>
 <LI><a href="#[82]">VADC0_C0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[82]">VADC0_C0_0_IRQHandler</a><BR>
 <LI><a href="#[83]">VADC0_C0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[83]">VADC0_C0_1_IRQHandler</a><BR>
 <LI><a href="#[84]">VADC0_C0_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[84]">VADC0_C0_2_IRQHandler</a><BR>
 <LI><a href="#[85]">VADC0_C0_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85]">VADC0_C0_3_IRQHandler</a><BR>
 <LI><a href="#[86]">VADC0_G0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[86]">VADC0_G0_0_IRQHandler</a><BR>
 <LI><a href="#[87]">VADC0_G0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[87]">VADC0_G0_1_IRQHandler</a><BR>
 <LI><a href="#[88]">VADC0_G0_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[88]">VADC0_G0_2_IRQHandler</a><BR>
 <LI><a href="#[89]">VADC0_G0_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[89]">VADC0_G0_3_IRQHandler</a><BR>
 <LI><a href="#[8a]">VADC0_G1_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8a]">VADC0_G1_0_IRQHandler</a><BR>
 <LI><a href="#[8b]">VADC0_G1_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8b]">VADC0_G1_1_IRQHandler</a><BR>
 <LI><a href="#[8c]">VADC0_G1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8c]">VADC0_G1_2_IRQHandler</a><BR>
 <LI><a href="#[8d]">VADC0_G1_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8d]">VADC0_G1_3_IRQHandler</a><BR>
 <LI><a href="#[8e]">VADC0_G2_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">VADC0_G2_0_IRQHandler</a><BR>
 <LI><a href="#[8f]">VADC0_G2_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f]">VADC0_G2_1_IRQHandler</a><BR>
 <LI><a href="#[90]">VADC0_G2_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[90]">VADC0_G2_2_IRQHandler</a><BR>
 <LI><a href="#[91]">VADC0_G2_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[91]">VADC0_G2_3_IRQHandler</a><BR>
 <LI><a href="#[92]">VADC0_G3_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92]">VADC0_G3_0_IRQHandler</a><BR>
 <LI><a href="#[93]">VADC0_G3_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[93]">VADC0_G3_1_IRQHandler</a><BR>
 <LI><a href="#[94]">VADC0_G3_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[94]">VADC0_G3_2_IRQHandler</a><BR>
 <LI><a href="#[95]">VADC0_G3_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[95]">VADC0_G3_3_IRQHandler</a><BR>
 <LI><a href="#[96]">DSD0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[96]">DSD0_0_IRQHandler</a><BR>
 <LI><a href="#[97]">DSD0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[97]">DSD0_1_IRQHandler</a><BR>
 <LI><a href="#[98]">DSD0_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[98]">DSD0_2_IRQHandler</a><BR>
 <LI><a href="#[99]">DSD0_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[99]">DSD0_3_IRQHandler</a><BR>
 <LI><a href="#[9a]">DSD0_4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9a]">DSD0_4_IRQHandler</a><BR>
 <LI><a href="#[9b]">DSD0_5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9b]">DSD0_5_IRQHandler</a><BR>
 <LI><a href="#[9c]">DSD0_6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9c]">DSD0_6_IRQHandler</a><BR>
 <LI><a href="#[9d]">DSD0_7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9d]">DSD0_7_IRQHandler</a><BR>
 <LI><a href="#[9e]">DAC0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9e]">DAC0_0_IRQHandler</a><BR>
 <LI><a href="#[9f]">DAC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9f]">DAC0_1_IRQHandler</a><BR>
 <LI><a href="#[a0]">CCU40_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a0]">CCU40_0_IRQHandler</a><BR>
 <LI><a href="#[a1]">CCU40_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a1]">CCU40_1_IRQHandler</a><BR>
 <LI><a href="#[a2]">CCU40_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a2]">CCU40_2_IRQHandler</a><BR>
 <LI><a href="#[a3]">CCU40_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a3]">CCU40_3_IRQHandler</a><BR>
 <LI><a href="#[a4]">CCU41_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a4]">CCU41_0_IRQHandler</a><BR>
 <LI><a href="#[a5]">CCU41_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a5]">CCU41_1_IRQHandler</a><BR>
 <LI><a href="#[a6]">CCU41_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a6]">CCU41_2_IRQHandler</a><BR>
 <LI><a href="#[a7]">CCU41_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a7]">CCU41_3_IRQHandler</a><BR>
 <LI><a href="#[a8]">CCU42_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a8]">CCU42_0_IRQHandler</a><BR>
 <LI><a href="#[a9]">CCU42_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a9]">CCU42_1_IRQHandler</a><BR>
 <LI><a href="#[aa]">CCU42_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[aa]">CCU42_2_IRQHandler</a><BR>
 <LI><a href="#[ab]">CCU42_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">CCU42_3_IRQHandler</a><BR>
 <LI><a href="#[ac]">CCU43_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ac]">CCU43_0_IRQHandler</a><BR>
 <LI><a href="#[ad]">CCU43_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ad]">CCU43_1_IRQHandler</a><BR>
 <LI><a href="#[ae]">CCU43_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ae]">CCU43_2_IRQHandler</a><BR>
 <LI><a href="#[af]">CCU43_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[af]">CCU43_3_IRQHandler</a><BR>
 <LI><a href="#[b0]">CCU80_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b0]">CCU80_0_IRQHandler</a><BR>
 <LI><a href="#[b1]">CCU80_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1]">CCU80_1_IRQHandler</a><BR>
 <LI><a href="#[b2]">CCU80_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b2]">CCU80_2_IRQHandler</a><BR>
 <LI><a href="#[b3]">CCU80_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b3]">CCU80_3_IRQHandler</a><BR>
 <LI><a href="#[b4]">CCU81_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b4]">CCU81_0_IRQHandler</a><BR>
 <LI><a href="#[b5]">CCU81_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b5]">CCU81_1_IRQHandler</a><BR>
 <LI><a href="#[b6]">CCU81_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b6]">CCU81_2_IRQHandler</a><BR>
 <LI><a href="#[b7]">CCU81_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b7]">CCU81_3_IRQHandler</a><BR>
 <LI><a href="#[b8]">POSIF0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8]">POSIF0_0_IRQHandler</a><BR>
 <LI><a href="#[b9]">POSIF0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b9]">POSIF0_1_IRQHandler</a><BR>
 <LI><a href="#[ba]">POSIF1_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ba]">POSIF1_0_IRQHandler</a><BR>
 <LI><a href="#[bb]">POSIF1_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[bb]">POSIF1_1_IRQHandler</a><BR>
 <LI><a href="#[bc]">HRPWM_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[bc]">HRPWM_0_IRQHandler</a><BR>
 <LI><a href="#[bd]">HRPWM_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[bd]">HRPWM_1_IRQHandler</a><BR>
 <LI><a href="#[be]">HRPWM_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[be]">HRPWM_2_IRQHandler</a><BR>
 <LI><a href="#[bf]">HRPWM_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[bf]">HRPWM_3_IRQHandler</a><BR>
 <LI><a href="#[c0]">CAN0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c0]">CAN0_0_IRQHandler</a><BR>
 <LI><a href="#[c1]">CAN0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c1]">CAN0_1_IRQHandler</a><BR>
 <LI><a href="#[c2]">CAN0_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c2]">CAN0_2_IRQHandler</a><BR>
 <LI><a href="#[c3]">CAN0_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c3]">CAN0_3_IRQHandler</a><BR>
 <LI><a href="#[c4]">CAN0_4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c4]">CAN0_4_IRQHandler</a><BR>
 <LI><a href="#[c5]">CAN0_5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c5]">CAN0_5_IRQHandler</a><BR>
 <LI><a href="#[c6]">CAN0_6_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c6]">CAN0_6_IRQHandler</a><BR>
 <LI><a href="#[c7]">CAN0_7_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c7]">CAN0_7_IRQHandler</a><BR>
 <LI><a href="#[c8]">USIC0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c8]">USIC0_0_IRQHandler</a><BR>
 <LI><a href="#[c9]">USIC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c9]">USIC0_1_IRQHandler</a><BR>
 <LI><a href="#[ca]">USIC0_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ca]">USIC0_2_IRQHandler</a><BR>
 <LI><a href="#[cb]">USIC0_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[cb]">USIC0_3_IRQHandler</a><BR>
 <LI><a href="#[cc]">USIC0_4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[cc]">USIC0_4_IRQHandler</a><BR>
 <LI><a href="#[cd]">USIC0_5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[cd]">USIC0_5_IRQHandler</a><BR>
 <LI><a href="#[ce]">USIC1_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ce]">USIC1_0_IRQHandler</a><BR>
 <LI><a href="#[cf]">USIC1_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[cf]">USIC1_1_IRQHandler</a><BR>
 <LI><a href="#[d0]">USIC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d0]">USIC1_2_IRQHandler</a><BR>
 <LI><a href="#[d1]">USIC1_3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d1]">USIC1_3_IRQHandler</a><BR>
 <LI><a href="#[d2]">USIC1_4_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d2]">USIC1_4_IRQHandler</a><BR>
 <LI><a href="#[d3]">USIC1_5_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d3]">USIC1_5_IRQHandler</a><BR>
 <LI><a href="#[d4]">LEDTS0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d4]">LEDTS0_0_IRQHandler</a><BR>
 <LI><a href="#[d5]">FCE0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d5]">FCE0_0_IRQHandler</a><BR>
 <LI><a href="#[d6]">GPDMA0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6]">GPDMA0_0_IRQHandler</a><BR>
 <LI><a href="#[d7]">USB0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d7]">USB0_0_IRQHandler</a><BR>
 <LI><a href="#[d8]">ETH0_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d8]">ETH0_0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[72]">BusFault_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[4]">BusFault_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c0]">CAN0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[52]">CAN0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c1]">CAN0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[53]">CAN0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c2]">CAN0_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[54]">CAN0_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c3]">CAN0_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[55]">CAN0_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c4]">CAN0_4_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[56]">CAN0_4_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c5]">CAN0_5_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[57]">CAN0_5_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c6]">CAN0_6_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[58]">CAN0_6_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c7]">CAN0_7_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[59]">CAN0_7_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a0]">CCU40_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[32]">CCU40_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a1]">CCU40_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[33]">CCU40_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a2]">CCU40_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[34]">CCU40_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a3]">CCU40_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[35]">CCU40_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a4]">CCU41_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[36]">CCU41_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a5]">CCU41_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[37]">CCU41_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a6]">CCU41_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[38]">CCU41_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a7]">CCU41_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[39]">CCU41_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a8]">CCU42_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[3a]">CCU42_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[a9]">CCU42_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[3b]">CCU42_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[aa]">CCU42_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[3c]">CCU42_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[ab]">CCU42_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[3d]">CCU42_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[ac]">CCU43_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[3e]">CCU43_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[ad]">CCU43_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[3f]">CCU43_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[ae]">CCU43_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[40]">CCU43_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[af]">CCU43_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[41]">CCU43_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b0]">CCU80_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[42]">CCU80_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b1]">CCU80_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[43]">CCU80_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b2]">CCU80_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[44]">CCU80_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b3]">CCU80_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[45]">CCU80_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b4]">CCU81_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[46]">CCU81_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b5]">CCU81_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[47]">CCU81_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b6]">CCU81_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[48]">CCU81_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b7]">CCU81_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[49]">CCU81_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[9e]">DAC0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[30]">DAC0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[9f]">DAC0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[31]">DAC0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[96]">DSD0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[28]">DSD0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[97]">DSD0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[29]">DSD0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[98]">DSD0_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[2a]">DSD0_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[99]">DSD0_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[2b]">DSD0_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[9a]">DSD0_4_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[2c]">DSD0_4_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[9b]">DSD0_5_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[2d]">DSD0_5_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[9c]">DSD0_6_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[2e]">DSD0_6_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[9d]">DSD0_7_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[2f]">DSD0_7_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[75]">DebugMon_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[7]">DebugMon_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[79]">ERU0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[b]">ERU0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[7a]">ERU0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[c]">ERU0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[7b]">ERU0_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[d]">ERU0_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[7c]">ERU0_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[e]">ERU0_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[7d]">ERU1_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[f]">ERU1_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[7e]">ERU1_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[10]">ERU1_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[7f]">ERU1_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[11]">ERU1_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[80]">ERU1_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[12]">ERU1_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d8]">ETH0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[6a]">ETH0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d5]">FCE0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[67]">FCE0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d6]">GPDMA0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[68]">GPDMA0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[bc]">HRPWM_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[4e]">HRPWM_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[bd]">HRPWM_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[4f]">HRPWM_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[be]">HRPWM_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[50]">HRPWM_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[bf]">HRPWM_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[51]">HRPWM_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[70]">HardFault_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[2]">HardFault_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d4]">LEDTS0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[66]">LEDTS0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[71]">MemManage_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[3]">MemManage_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[6f]">NMI_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[1]">NMI_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[81]">PMU0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[13]">PMU0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b8]">POSIF0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[4a]">POSIF0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[b9]">POSIF0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[4b]">POSIF0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[ba]">POSIF1_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[4c]">POSIF1_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[bb]">POSIF1_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[4d]">POSIF1_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[76]">PendSV_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[8]">PendSV_Handler_Veneer</a> from port.o(.emb_text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[de]">Reset_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[78]">SCU_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[a]">SCU_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[74]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[6]">SVC_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[77]">SysTick_Handler</a> from port.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[9]">SysTick_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[6c]">SystemInit</a> from system_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[6d]">SystemInit_DAVE3</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[d7]">USB0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[69]">USB0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c8]">USIC0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[5a]">USIC0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[c9]">USIC0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[5b]">USIC0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[ca]">USIC0_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[5c]">USIC0_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[cb]">USIC0_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[5d]">USIC0_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[cc]">USIC0_4_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[5e]">USIC0_4_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[cd]">USIC0_5_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[5f]">USIC0_5_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[ce]">USIC1_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[60]">USIC1_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[cf]">USIC1_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[61]">USIC1_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d0]">USIC1_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[62]">USIC1_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d1]">USIC1_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[63]">USIC1_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d2]">USIC1_4_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[64]">USIC1_4_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[d3]">USIC1_5_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[65]">USIC1_5_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[73]">UsageFault_Handler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[5]">UsageFault_Handler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[82]">VADC0_C0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[14]">VADC0_C0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[83]">VADC0_C0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[15]">VADC0_C0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[84]">VADC0_C0_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[16]">VADC0_C0_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[85]">VADC0_C0_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[17]">VADC0_C0_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[86]">VADC0_G0_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[18]">VADC0_G0_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[87]">VADC0_G0_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[19]">VADC0_G0_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[88]">VADC0_G0_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[1a]">VADC0_G0_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[89]">VADC0_G0_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[1b]">VADC0_G0_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[8a]">VADC0_G1_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[1c]">VADC0_G1_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[8b]">VADC0_G1_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[1d]">VADC0_G1_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[8c]">VADC0_G1_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[1e]">VADC0_G1_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[8d]">VADC0_G1_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[1f]">VADC0_G1_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[8e]">VADC0_G2_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[20]">VADC0_G2_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[8f]">VADC0_G2_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[21]">VADC0_G2_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[90]">VADC0_G2_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[22]">VADC0_G2_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[91]">VADC0_G2_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[23]">VADC0_G2_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[92]">VADC0_G3_0_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[24]">VADC0_G3_0_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[93]">VADC0_G3_1_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[25]">VADC0_G3_1_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[94]">VADC0_G3_2_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[26]">VADC0_G3_2_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[95]">VADC0_G3_3_IRQHandler</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[27]">VADC0_G3_3_IRQHandler_Veneer</a> from startup_xmc4400.o(.text) referenced from startup_xmc4400.o(RESET)
 <LI><a href="#[6e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_xmc4400.o(.text)
 <LI><a href="#[6b]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[dc]">prvIdleTask</a> from tasks.o(.text) referenced from tasks.o(.text)
 <LI><a href="#[d9]">prvQueueReceiveTask</a> from main_blinky.o(.text) referenced from main_blinky.o(.text)
 <LI><a href="#[da]">prvQueueSendTask</a> from main_blinky.o(.text) referenced from main_blinky.o(.text)
 <LI><a href="#[dd]">prvTaskExitError</a> from port.o(.text) referenced from port.o(.text)
 <LI><a href="#[db]">prvTimerTask</a> from timers.o(.text) referenced from timers.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[164]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[e0]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[163]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[165]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[166]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[167]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[168]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[169]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[74]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[15b]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[15a]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler_Veneer</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PendSV_Handler_Veneer &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[15c]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[e4]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 154 bytes, Stack size 12 bytes, system_xmc4400.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6c]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, system_xmc4400.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SystemClockSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockSetup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>Reset_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))

<P><STRONG><a name="[6f]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler_Veneer</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>SCU_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[a]"></a>SCU_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>ERU0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>ERU0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>ERU0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>ERU0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>ERU0_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>ERU0_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>ERU0_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU0_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>ERU0_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>ERU1_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>ERU1_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>ERU1_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[10]"></a>ERU1_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>ERU1_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[11]"></a>ERU1_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>ERU1_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ERU1_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>ERU1_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>PMU0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMU0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>PMU0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>VADC0_C0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>VADC0_C0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>VADC0_C0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>VADC0_C0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>VADC0_C0_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[16]"></a>VADC0_C0_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>VADC0_C0_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>VADC0_C0_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>VADC0_G0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>VADC0_G0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>VADC0_G0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>VADC0_G0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>VADC0_G0_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>VADC0_G0_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>VADC0_G0_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G0_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>VADC0_G0_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>VADC0_G1_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>VADC0_G1_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>VADC0_G1_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>VADC0_G1_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>VADC0_G1_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>VADC0_G1_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>VADC0_G1_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G1_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>VADC0_G1_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>VADC0_G2_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>VADC0_G2_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>VADC0_G2_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>VADC0_G2_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>VADC0_G2_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>VADC0_G2_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>VADC0_G2_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G2_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>VADC0_G2_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>VADC0_G3_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>VADC0_G3_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>VADC0_G3_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>VADC0_G3_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>VADC0_G3_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>VADC0_G3_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>VADC0_G3_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_G3_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>VADC0_G3_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>DSD0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>DSD0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>DSD0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>DSD0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>DSD0_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>DSD0_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>DSD0_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>DSD0_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>DSD0_4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>DSD0_4_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>DSD0_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>DSD0_5_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>DSD0_6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>DSD0_6_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>DSD0_7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSD0_7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>DSD0_7_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>DAC0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>DAC0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>DAC0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>DAC0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>CCU40_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>CCU40_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>CCU40_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>CCU40_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>CCU40_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>CCU40_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>CCU40_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>CCU40_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>CCU41_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>CCU41_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>CCU41_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>CCU41_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>CCU41_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>CCU41_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>CCU41_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU41_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>CCU41_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>CCU42_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>CCU42_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>CCU42_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>CCU42_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>CCU42_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>CCU42_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>CCU42_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU42_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>CCU42_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>CCU43_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>CCU43_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>CCU43_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>CCU43_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>CCU43_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>CCU43_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>CCU43_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU43_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>CCU43_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>CCU80_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>CCU80_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>CCU80_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>CCU80_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>CCU80_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>CCU80_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>CCU80_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU80_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>CCU80_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>CCU81_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>CCU81_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>CCU81_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>CCU81_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>CCU81_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>CCU81_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>CCU81_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU81_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>CCU81_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>POSIF0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>POSIF0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[b9]"></a>POSIF0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>POSIF0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>POSIF1_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF1_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF1_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>POSIF1_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>POSIF1_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF1_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSIF1_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>POSIF1_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>HRPWM_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>HRPWM_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>HRPWM_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>HRPWM_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>HRPWM_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>HRPWM_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[bf]"></a>HRPWM_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRPWM_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>HRPWM_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>CAN0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>CAN0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>CAN0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>CAN0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>CAN0_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>CAN0_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>CAN0_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>CAN0_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>CAN0_4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>CAN0_4_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>CAN0_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[57]"></a>CAN0_5_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>CAN0_6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_6_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_6_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>CAN0_6_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>CAN0_7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_7_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>CAN0_7_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>USIC0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>USIC0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[c9]"></a>USIC0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>USIC0_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>USIC0_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>USIC0_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>USIC0_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>USIC0_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>USIC0_4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>USIC0_4_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>USIC0_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>USIC0_5_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>USIC1_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>USIC1_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>USIC1_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>USIC1_1_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>USIC1_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>USIC1_2_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d1]"></a>USIC1_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>USIC1_3_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>USIC1_4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_4_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>USIC1_4_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d3]"></a>USIC1_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_5_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>USIC1_5_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>LEDTS0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDTS0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDTS0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[66]"></a>LEDTS0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>FCE0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCE0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FCE0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>FCE0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>GPDMA0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>GPDMA0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>USB0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>USB0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>ETH0_0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH0_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH0_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>ETH0_0_IRQHandler_Veneer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>SystemInit_DAVE3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>AllowPLLInitByStartup</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_xmc4400.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockSetup
</UL>

<P><STRONG><a name="[6b]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; main_blinky &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_blinky
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[15f]"></a>vApplicationMallocFailedHook</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[16a]"></a>vApplicationIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>vApplicationStackOverflowHook</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[16b]"></a>vApplicationTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>main_blinky</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, main_blinky.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main_blinky &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>xTimerGenericCommand</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
</UL>

<P><STRONG><a name="[103]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[106]"></a>xTimerCreate</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
</UL>

<P><STRONG><a name="[16c]"></a>xTimerGetTimerDaemonTaskHandle</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>xTimerGetPeriod</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>vTimerSetReloadMode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[109]"></a>uxTimerGetReloadMode</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[16e]"></a>xTimerGetExpiryTime</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>pcTimerGetName</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>xTimerIsTimerActive</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[10b]"></a>pvTimerGetTimerID</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[10c]"></a>vTimerSetTimerID</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[170]"></a>uxTimerGetTimerNumber</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>vTimerSetTimerNumber</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[105]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
</UL>

<P><STRONG><a name="[132]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGenericNotifyGiveFromISR
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[ef]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>

<P><STRONG><a name="[f4]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGenericNotifyGiveFromISR
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
</UL>

<P><STRONG><a name="[10d]"></a>xQueueGenericReset</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[eb]"></a>xQueueGenericCreate</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_blinky
</UL>

<P><STRONG><a name="[e9]"></a>xQueueGenericSend</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveMutexRecursive
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvQueueSendTask
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[11a]"></a>xQueueCreateMutex</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[11b]"></a>xQueueGiveMutexRecursive</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[11e]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetDisinheritPriorityAfterTimeout
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueTakeMutexRecursive
</UL>

<P><STRONG><a name="[123]"></a>xQueueTakeMutexRecursive</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[124]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[f2]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[126]"></a>xQueueGiveFromISR</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[ea]"></a>xQueueReceive</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvQueueReceiveTask
</UL>

<P><STRONG><a name="[128]"></a>xQueuePeek</STRONG> (Thumb, 362 bytes, Stack size 48 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[129]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[12a]"></a>xQueuePeekFromISR</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[12b]"></a>uxQueueMessagesWaiting</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[12c]"></a>uxQueueSpacesAvailable</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[172]"></a>uxQueueMessagesWaitingFromISR</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, queue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[12d]"></a>vQueueDelete</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>

<P><STRONG><a name="[173]"></a>uxQueueGetQueueNumber</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>vQueueSetQueueNumber</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>ucQueueGetQueueType</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>xQueueIsQueueEmptyFromISR</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>xQueueIsQueueFullFromISR</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>vQueueAddToRegistry</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[178]"></a>pcQueueGetName</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[ec]"></a>xTaskCreate</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_blinky
</UL>

<P><STRONG><a name="[137]"></a>vTaskDelete</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[139]"></a>xTaskIncrementTick</STRONG> (Thumb, 362 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[fb]"></a>xTaskResumeAll</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCatchUpTicks
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetSystemState
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskDelayUntil
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetHeapStats
</UL>

<P><STRONG><a name="[fa]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCatchUpTicks
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetSystemState
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskDelayUntil
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetHeapStats
</UL>

<P><STRONG><a name="[e8]"></a>xTaskDelayUntil</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xTaskDelayUntil &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvQueueSendTask
</UL>

<P><STRONG><a name="[13b]"></a>vTaskDelay</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>

<P><STRONG><a name="[13c]"></a>eTaskGetState</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
</UL>

<P><STRONG><a name="[13d]"></a>uxTaskPriorityGet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[13e]"></a>uxTaskPriorityGetFromISR</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[13f]"></a>vTaskPrioritySet</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[e2]"></a>vTaskSwitchContext</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler_Veneer
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
</UL>

<P><STRONG><a name="[141]"></a>vTaskSuspend</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[142]"></a>vTaskResume</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[144]"></a>xTaskResumeFromISR</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[ed]"></a>vTaskStartScheduler</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_blinky
</UL>

<P><STRONG><a name="[147]"></a>vTaskEndScheduler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEndScheduler
</UL>

<P><STRONG><a name="[e7]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvQueueSendTask
</UL>

<P><STRONG><a name="[149]"></a>xTaskGetTickCountFromISR</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[179]"></a>uxTaskGetNumberOfTasks</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>pcTaskGetName</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>vTaskGetInfo</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskCheckFreeStackSpace
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTasksWithinSingleList
</UL>

<P><STRONG><a name="[14d]"></a>uxTaskGetSystemState</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTasksWithinSingleList
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>

<P><STRONG><a name="[14e]"></a>xTaskCatchUpTicks</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>

<P><STRONG><a name="[118]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[14f]"></a>vTaskPlaceOnUnorderedEventList</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[12f]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[10e]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[150]"></a>vTaskRemoveFromUnorderedEventList</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[151]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[116]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[117]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[111]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[17b]"></a>uxTaskGetTaskNumber</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>vTaskSetTaskNumber</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>xTaskGetCurrentTaskHandle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueTakeMutexRecursive
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveMutexRecursive
</UL>

<P><STRONG><a name="[f1]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[120]"></a>xTaskPriorityInherit</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[114]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[122]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[17d]"></a>uxTaskResetEventItemValue</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[152]"></a>ulTaskGenericNotifyTake</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[153]"></a>xTaskGenericNotifyWait</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[154]"></a>xTaskGenericNotify</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[155]"></a>xTaskGenericNotifyFromISR</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[156]"></a>vTaskGenericNotifyGiveFromISR</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[157]"></a>xTaskGenericNotifyStateClear</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[158]"></a>ulTaskGenericNotifyValueClear</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[135]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[159]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[146]"></a>xPortStartScheduler</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[148]"></a>vPortEndScheduler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, port.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskEndScheduler
</UL>

<P><STRONG><a name="[ff]"></a>vPortEnterCritical</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskGenericNotifyValueClear
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyStateClear
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyWait
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskGenericNotifyTake
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueSpacesAvailable
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetTimerID
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTimerGetReloadMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetReloadMode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetHeapStats
</UL>

<P><STRONG><a name="[102]"></a>vPortExitCritical</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskGenericNotifyValueClear
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyStateClear
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyWait
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskGenericNotifyTake
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueSpacesAvailable
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetTimerID
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTimerGetReloadMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetReloadMode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetHeapStats
</UL>

<P><STRONG><a name="[77]"></a>SysTick_Handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4400.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGenericNotifyGiveFromISR
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGetFromISR
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeekFromISR
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[107]"></a>pvPortMalloc</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[f7]"></a>vPortFree</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[17e]"></a>xPortGetFreeHeapSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>xPortGetMinimumEverFreeHeapSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>vPortInitialiseBlocks</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>vPortGetHeapStats</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, heap_4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[115]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[181]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[183]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[185]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[e1]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[187]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[189]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[18a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[e3]"></a>SystemClockSetup</STRONG> (Thumb, 660 bytes, Stack size 16 bytes, system_xmc4400.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemClockSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllowPLLInitByStartup
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e5]"></a>prvSetupHardware</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>prvQueueSendTask</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main_blinky.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = prvQueueSendTask &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskDelayUntil
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_blinky.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>prvQueueReceiveTask</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main_blinky.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvQueueReceiveTask &rArr; xQueueReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_blinky.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[f3]"></a>prvSwitchTimerLists</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[f5]"></a>prvSampleTimeNow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[f6]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[f8]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[f9]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[fd]"></a>prvGetNextExpireTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[db]"></a>prvTimerTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
</UL>

<P><STRONG><a name="[104]"></a>prvInitialiseNewTimer</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>

<P><STRONG><a name="[10f]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[110]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[112]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[113]"></a>prvCopyDataToQueue</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[119]"></a>prvInitialiseMutex</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[121]"></a>prvGetDisinheritPriorityAfterTimeout</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, queue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[11d]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[127]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeekFromISR
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[130]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[131]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[133]"></a>prvInitialiseNewTask</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[138]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[136]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[13a]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyWait
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskGenericNotifyTake
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskDelayUntil
</UL>

<P><STRONG><a name="[143]"></a>prvTaskIsTaskSuspended</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>

<P><STRONG><a name="[145]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[dc]"></a>prvIdleTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text)
</UL>
<P><STRONG><a name="[14b]"></a>prvTaskCheckFreeStackSpace</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
</UL>

<P><STRONG><a name="[14c]"></a>prvListTasksWithinSingleList</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetSystemState
</UL>

<P><STRONG><a name="[dd]"></a>prvTaskExitError</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, port.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text)
</UL>
<P><STRONG><a name="[15e]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[15d]"></a>prvHeapInit</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
